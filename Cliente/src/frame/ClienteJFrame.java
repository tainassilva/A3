/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame;

import bean.ChatMessage;
import bean.ChatMessage.Action;
import service.ServiceCliente;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.ListSelectionModel.SINGLE_SELECTION;

/**
 *
 * @author taina
 */
public class ClienteJFrame extends javax.swing.JFrame {
    
    private Socket socket;
    private ChatMessage message;
    private ServiceCliente service;
    /**
     * Creates new form ClienteJFrame
     */
    public ClienteJFrame() {
        initComponents();
    }
    
    private class ListenerSocket implements Runnable{
        private ObjectInputStream input;
        
        public ListenerSocket(Socket socket){
            try {
                this.input = new ObjectInputStream(socket.getInputStream());
            } catch (IOException ex) {
                Logger.getLogger(ClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        @Override
        public void run() {
            ChatMessage message = null;
            try {
                while((message = (ChatMessage) input.readObject()) != null){
                    Action action = message.getAcao();
                    
                    if (action.equals(Action.CONECTADO)){
                        connected(message);
                    } 
                    else if(action.equals(Action.DESCONECTADO)){
                        disconnected();
                        socket.close();
                    }
                    else if(action.equals(Action.SEND_ONE)) { // envio de mensagens reservadas
                        receive(message);
                    }
                    else if (action.equals(Action.USUARIOS_ONLINE)){
                        refreshUsers(message);
                    }
                    // não precisa do send all porque o servidor não vai mandar mensagem contendo send all
                }
            } catch (IOException ex) {
                Logger.getLogger(ClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void connected (ChatMessage message){
    
    if (message.getTexto().equals("NO")){
        this.txtNome.setText("");
        JOptionPane.showMessageDialog(this,"Não foi possivel realizar a conexão, tente novamente com um novo nome");
        return;
    }
    // Caso a conexão seja feita, os botões vão ser ativados
    this.message= message;  // passar o valor que foi recebido como mensagem
    this.btnConectar.setEnabled(false); // desabilita o botão de "Conectar"
    this.txtNome.setEditable(false);
    this.btnSair.setEnabled(true);
    this.txtAreaDigitarMensagem.setEnabled(true);
    this.txtAreaRecebeMensagem.setEnabled(true);
    this.btnEnviar.setEnabled(true);
    this.btnLimpar.setEnabled(true);
   
    
    JOptionPane.showMessageDialog(this, "Conexão realizada com sucesso");
    
    }
    private void disconnected(){
            this.btnConectar.setEnabled(true);
            this.txtAreaDigitarMensagem.setEnabled(true);
            this.btnSair.setEnabled(false);
            this.txtAreaRecebeMensagem.setEnabled(false);
            this.btnEnviar.setEnabled(false);
            this.btnLimpar.setEnabled(false);
            
            this.txtAreaRecebeMensagem.setText("");
            this.txtAreaDigitarMensagem.setText("");
           
            
            JOptionPane.showMessageDialog(this, "Você saiu do chat");
    
    }
    
    private void receive(ChatMessage message){
        this.txtAreaRecebeMensagem.append(message.getNome() + " diz " + message.getTexto()+ "\n");
    }
    
    private void refreshUsers(ChatMessage message){
        System.out.println(message.getSetOnlines().toString());
        Set<String> names = message.getSetOnlines();
        //jlist só aceita array como parametro
        
        names.remove((String)message.getNome());
        String[] array = names.toArray(new String[names.size()]);
        this.listOnlines.setListData(array);
        this.listOnlines.setSelectionMode(SINGLE_SELECTION); // aceita uma unica seleção de nomes por vez
        this.listOnlines.setLayoutOrientation(JList.VERTICAL); // um nome embaixo do outro
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnConectar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listOnlines = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaRecebeMensagem = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaDigitarMensagem = new javax.swing.JTextArea();
        btnEnviar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conectar"));

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.setEnabled(false);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConectar)
                .addGap(18, 18, 18)
                .addComponent(btnSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConectar)
                        .addComponent(btnSair)))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Onlines"));

        jScrollPane4.setViewportView(listOnlines);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtAreaRecebeMensagem.setEditable(false);
        txtAreaRecebeMensagem.setColumns(20);
        txtAreaRecebeMensagem.setRows(5);
        txtAreaRecebeMensagem.setEnabled(false);
        jScrollPane2.setViewportView(txtAreaRecebeMensagem);

        txtAreaDigitarMensagem.setColumns(20);
        txtAreaDigitarMensagem.setRows(5);
        txtAreaDigitarMensagem.setEnabled(false);
        jScrollPane3.setViewportView(txtAreaDigitarMensagem);

        btnEnviar.setText("Enviar");
        btnEnviar.setEnabled(false);
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.setEnabled(false);
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLimpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEnviar)
                .addContainerGap())
            .addComponent(jScrollPane3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(btnLimpar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        String nome = this.txtNome.getText(); // this pra declarar as variaveis do escopo da classe
        
        if (!nome.isEmpty()){ // se o nome for diferente de vazio
            this.message = new ChatMessage();
            this.message.setAcao(Action.CONECTADO);
            this.message.setNome(nome);
            
          
                this.service = new ServiceCliente();
                this.socket = this.service.connect();
                
                new Thread(new ListenerSocket(this.socket)).start();
            
           this.service.send(message);
        }
       
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        ChatMessage message = new ChatMessage();
        message.setNome(this.message.getNome());
        message.setAcao(Action.DESCONECTADO);
        this.service.send(message);
        disconnected();
       
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        this.txtAreaDigitarMensagem.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
    String text = this.txtAreaDigitarMensagem.getText();
    String name = this.message.getNome();
    this.message = new ChatMessage();
    
    if (this.listOnlines.getSelectedIndex() > -1) {
        String selectedName = (String) this.listOnlines.getSelectedValue();
        if (selectedName != null && !selectedName.isEmpty()) {
            this.message.setReservado_nome(selectedName);
            this.message.setAcao(Action.SEND_ONE);
        }
        this.listOnlines.clearSelection();
    } else {
        this.message.setAcao(Action.SEND_ALL);
    }
    
    if (!text.isEmpty()) {
        this.message.setNome(name);
        this.message.setTexto(text);
        
        this.txtAreaRecebeMensagem.append(message.getNome() + " diz " + text + "\n");
        this.service.send(this.message);
    }
    
    this.txtAreaDigitarMensagem.setText("");




//        String text = this.txtAreaDigitarMensagem.getText();
//        String name = this.message.getNome();
//        this.message = new ChatMessage(); // pra garantir que nao manda nada que não deva ir de mensagem
//        
//        // Pra ver se existe esse membro dentro da lista de usuários onlines
//        if(this.listOnlines.getSelectedIndex() > -1){ // Maior que -1 significa que tem um nome selecionado ...se não existir nenhum index selecionado
//               this.message.setReservado_nome((String)this.listOnlines.getSelectedValue());
//               this.message.setAcao(Action.SEND_ONE);
//               this.listOnlines.clearSelection(); // limpa a seleção do nome e não fica eternamente selecionado
//        } 
//        else{
//            // Caso não tenha nenhum nome selecionado, enviamos para todos
//            this.message.setAcao(Action.SEND_ALL);
//        }
//        
//        if (!text.isEmpty()){
//        this.message.setNome(name);
//        this.message.setTexto(text);
//        this.message.setAcao(Action.SEND_ALL);
//        
//        this.txtAreaRecebeMensagem.append(message.getNome()+ " diz " + text + "\n");
//        this.service.send(this.message);
//        }
//        this.txtAreaDigitarMensagem.setText("");
    }//GEN-LAST:event_btnEnviarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> listOnlines;
    private javax.swing.JTextArea txtAreaDigitarMensagem;
    private javax.swing.JTextArea txtAreaRecebeMensagem;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
